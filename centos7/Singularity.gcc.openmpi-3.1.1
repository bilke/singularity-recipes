# GCC 5.3.1
Bootstrap: docker
From: centos/devtoolset-4-toolchain-centos7

%environment
    CC=/opt/rh/devtoolset-4/root/bin/gcc
    CXX=/opt/rh/devtoolset-4/root/bin/g++
    LD_LIBRARY_PATH=/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1:$LD_LIBRARY_PATH
    unset HOME
    export CC CXX LD_LIBRARY_PATH 

%post
    export CONAN_USER_HOME=/scif/data/conan
    echo "export CONAN_USER_HOME=$CONAN_USER_HOME" >> $SINGULARITY_ENVIRONMENT
    yum -y install make
    mkdir -p $CONAN_USER_HOME
    chmod 777 $CONAN_USER_HOME
    mkdir -p /sw /scratch /projects


##############################
# release
##############################

%appinstall release
  curl https://github.com/ufz/ogs/releases/download/6.1.0/ogs-6.1.0-Linux-4.4.0-104-generic-x64.tar.gz -O -L
  tar xf ogs-6.1.0-Linux-4.4.0-104-generic-x64.tar.gz
  rm ogs-6.1.0-Linux-4.4.0-104-generic-x64.tar.gz

%apprun release
  $SINGULARITY_APPROOT/ogs-6.1.0-Linux-4.4.0-104-generic-x64/bin/ogs


##############################
# dev
##############################

%appenv dev
  CC=/opt/rh/devtoolset-4/root/bin/gcc
  CXX=/opt/rh/devtoolset-4/root/bin/g++
  export CC CXX

%appinstall dev
  yum -y install epel-release
  yum -y install git
  curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash
  yum -y install git-lfs

  yum -y install python-pip unzip

  python -m pip install --upgrade pip
  python -m pip install cmake conan

  curl -L -o ninja-linux.zip https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip
  unzip ninja-linux.zip
  mv ninja /usr/local/bin/ninja
  rm ninja-linux.zip

  # build ogs here
  git lfs clone --branch singularity --depth=1 https://github.com/bilke/ogs || echo "Source already cloned."
  mkdir build || echo "Build directory exists."
  cd build
  CC=/opt/rh/devtoolset-4/root/bin/gcc cmake CXX=/opt/rh/devtoolset-4/root/bin/g++ ../ogs -G Ninja -DCMAKE_BUILD_TYPE=Release -DOGS_USE_CONAN=ON -DCMAKE_INSTALL_PREFIX=$SINGULARITY_APPROOT
  ninja install

%apprun dev
  exec $SINGULARITY_APPROOT/bin/ogs "$@"


##############################
# petsc
##############################

%appenv petsc
  CC=mpicc
  CXX=mpic++
  export CC CXX

%appinstall petsc
  VERSION=3.1.1
  yum -y install make perl
  curl -L https://www.open-mpi.org/software/ompi/v3.1/downloads/openmpi-$VERSION.tar.gz -O
  tar xf openmpi-$VERSION.tar.gz
  cd openmpi-$VERSION
  CC=/opt/rh/devtoolset-4/root/bin/gcc CXX=/opt/rh/devtoolset-4/root/bin/g++ ./configure --prefix=/usr/local
  make -j $(nproc)
  make install
  mpicc examples/ring_c.c -o ring
  cp ./ring /usr/bin/
  mpicc examples/hello_c.c -o hello
  cp ./hello /usr/bin
  cd ..
  rm -rf openmpi-*

  mkdir build || echo "Build directory exists."
  cd build
  CC=mpicc CXX=mpic++ cmake /scif/apps/dev/ogs -G Ninja -DCMAKE_BUILD_TYPE=Release \
    -DOGS_USE_PETSC=ON \
    -DOGS_USE_CONAN=ON \
    -DCMAKE_INSTALL_PREFIX=$SINGULARITY_APPROOT
  ninja install

%apprun petsc
  exec $SINGULARITY_APPROOT/bin/ogs "$@"
